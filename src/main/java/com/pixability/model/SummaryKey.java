/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.pixability.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class SummaryKey extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -9124864789036026863L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SummaryKey\",\"namespace\":\"com.pixability.model\",\"fields\":[{\"name\":\"date\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"line_item_id\",\"type\":\"long\"},{\"name\":\"platform\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SummaryKey> ENCODER =
      new BinaryMessageEncoder<SummaryKey>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SummaryKey> DECODER =
      new BinaryMessageDecoder<SummaryKey>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<SummaryKey> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<SummaryKey> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SummaryKey>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this SummaryKey to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a SummaryKey from a ByteBuffer. */
  public static SummaryKey fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String date;
  @Deprecated public long line_item_id;
  @Deprecated public java.lang.String platform;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SummaryKey() {}

  /**
   * All-args constructor.
   * @param date The new value for date
   * @param line_item_id The new value for line_item_id
   * @param platform The new value for platform
   */
  public SummaryKey(java.lang.String date, java.lang.Long line_item_id, java.lang.String platform) {
    this.date = date;
    this.line_item_id = line_item_id;
    this.platform = platform;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return date;
    case 1: return line_item_id;
    case 2: return platform;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: date = (java.lang.String)value$; break;
    case 1: line_item_id = (java.lang.Long)value$; break;
    case 2: platform = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'date' field.
   * @return The value of the 'date' field.
   */
  public java.lang.String getDate() {
    return date;
  }

  /**
   * Sets the value of the 'date' field.
   * @param value the value to set.
   */
  public void setDate(java.lang.String value) {
    this.date = value;
  }

  /**
   * Gets the value of the 'line_item_id' field.
   * @return The value of the 'line_item_id' field.
   */
  public java.lang.Long getLineItemId() {
    return line_item_id;
  }

  /**
   * Sets the value of the 'line_item_id' field.
   * @param value the value to set.
   */
  public void setLineItemId(java.lang.Long value) {
    this.line_item_id = value;
  }

  /**
   * Gets the value of the 'platform' field.
   * @return The value of the 'platform' field.
   */
  public java.lang.String getPlatform() {
    return platform;
  }

  /**
   * Sets the value of the 'platform' field.
   * @param value the value to set.
   */
  public void setPlatform(java.lang.String value) {
    this.platform = value;
  }

  /**
   * Creates a new SummaryKey RecordBuilder.
   * @return A new SummaryKey RecordBuilder
   */
  public static com.pixability.model.SummaryKey.Builder newBuilder() {
    return new com.pixability.model.SummaryKey.Builder();
  }

  /**
   * Creates a new SummaryKey RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SummaryKey RecordBuilder
   */
  public static com.pixability.model.SummaryKey.Builder newBuilder(com.pixability.model.SummaryKey.Builder other) {
    return new com.pixability.model.SummaryKey.Builder(other);
  }

  /**
   * Creates a new SummaryKey RecordBuilder by copying an existing SummaryKey instance.
   * @param other The existing instance to copy.
   * @return A new SummaryKey RecordBuilder
   */
  public static com.pixability.model.SummaryKey.Builder newBuilder(com.pixability.model.SummaryKey other) {
    return new com.pixability.model.SummaryKey.Builder(other);
  }

  /**
   * RecordBuilder for SummaryKey instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SummaryKey>
    implements org.apache.avro.data.RecordBuilder<SummaryKey> {

    private java.lang.String date;
    private long line_item_id;
    private java.lang.String platform;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.pixability.model.SummaryKey.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.date)) {
        this.date = data().deepCopy(fields()[0].schema(), other.date);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.line_item_id)) {
        this.line_item_id = data().deepCopy(fields()[1].schema(), other.line_item_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.platform)) {
        this.platform = data().deepCopy(fields()[2].schema(), other.platform);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing SummaryKey instance
     * @param other The existing instance to copy.
     */
    private Builder(com.pixability.model.SummaryKey other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.date)) {
        this.date = data().deepCopy(fields()[0].schema(), other.date);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.line_item_id)) {
        this.line_item_id = data().deepCopy(fields()[1].schema(), other.line_item_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.platform)) {
        this.platform = data().deepCopy(fields()[2].schema(), other.platform);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'date' field.
      * @return The value.
      */
    public java.lang.String getDate() {
      return date;
    }

    /**
      * Sets the value of the 'date' field.
      * @param value The value of 'date'.
      * @return This builder.
      */
    public com.pixability.model.SummaryKey.Builder setDate(java.lang.String value) {
      validate(fields()[0], value);
      this.date = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'date' field has been set.
      * @return True if the 'date' field has been set, false otherwise.
      */
    public boolean hasDate() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'date' field.
      * @return This builder.
      */
    public com.pixability.model.SummaryKey.Builder clearDate() {
      date = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'line_item_id' field.
      * @return The value.
      */
    public java.lang.Long getLineItemId() {
      return line_item_id;
    }

    /**
      * Sets the value of the 'line_item_id' field.
      * @param value The value of 'line_item_id'.
      * @return This builder.
      */
    public com.pixability.model.SummaryKey.Builder setLineItemId(long value) {
      validate(fields()[1], value);
      this.line_item_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'line_item_id' field has been set.
      * @return True if the 'line_item_id' field has been set, false otherwise.
      */
    public boolean hasLineItemId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'line_item_id' field.
      * @return This builder.
      */
    public com.pixability.model.SummaryKey.Builder clearLineItemId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'platform' field.
      * @return The value.
      */
    public java.lang.String getPlatform() {
      return platform;
    }

    /**
      * Sets the value of the 'platform' field.
      * @param value The value of 'platform'.
      * @return This builder.
      */
    public com.pixability.model.SummaryKey.Builder setPlatform(java.lang.String value) {
      validate(fields()[2], value);
      this.platform = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'platform' field has been set.
      * @return True if the 'platform' field has been set, false otherwise.
      */
    public boolean hasPlatform() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'platform' field.
      * @return This builder.
      */
    public com.pixability.model.SummaryKey.Builder clearPlatform() {
      platform = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SummaryKey build() {
      try {
        SummaryKey record = new SummaryKey();
        record.date = fieldSetFlags()[0] ? this.date : (java.lang.String) defaultValue(fields()[0]);
        record.line_item_id = fieldSetFlags()[1] ? this.line_item_id : (java.lang.Long) defaultValue(fields()[1]);
        record.platform = fieldSetFlags()[2] ? this.platform : (java.lang.String) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SummaryKey>
    WRITER$ = (org.apache.avro.io.DatumWriter<SummaryKey>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SummaryKey>
    READER$ = (org.apache.avro.io.DatumReader<SummaryKey>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
